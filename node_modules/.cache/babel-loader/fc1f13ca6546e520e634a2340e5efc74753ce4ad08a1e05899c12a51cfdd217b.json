{"ast":null,"code":"import { getAddressList } from '@/api/address';\nimport { checkOrder, submitOrder } from '@/api/order';\nexport default {\n  name: 'PayIndex',\n  data() {\n    return {\n      addressList: [],\n      order: {},\n      personal: {}\n    };\n  },\n  methods: {\n    async getAddressList() {\n      const {\n        data: {\n          list\n        }\n      } = await getAddressList();\n      this.addressList = list;\n    },\n    // 获取结算商品\n    async getOrderList() {\n      if (this.mode === 'cart') {\n        const {\n          data: {\n            order,\n            personal\n          }\n        } = await checkOrder(this.mode, {\n          cartIds: this.cartIds\n        });\n        this.order = order;\n        this.personal = personal;\n      }\n      if (this.mode === 'buyNow') {\n        const {\n          data: {\n            order,\n            personal\n          }\n        } = await checkOrder(this.mode, {\n          goodsId: this.goodsId,\n          goodsSkuId: this.goodsSkuId,\n          goodsNum: this.goodsNum\n        });\n        this.order = order;\n        this.personal = personal;\n      }\n    },\n    // 生成订单\n    async submitOrder() {\n      if (this.mode === 'cart') {\n        await submitOrder(this.mode, {\n          remark: this.remark,\n          cartIds: this.cartIds\n        });\n      }\n      if (this.mode === 'buyNow') {\n        await submitOrder(this.mode, {\n          remark: this.remark,\n          goodsId: this.goodsId,\n          goodsSkuId: this.goodsSkuId,\n          goodsNum: this.goodsNum\n        });\n      }\n      this.$toast.success('支付成功');\n      this.$router.replace('/myorder');\n    }\n  },\n  async created() {\n    this.getAddressList();\n    this.getOrderList();\n  },\n  computed: {\n    selectAddress() {\n      // 这里地址管理不是主线业务，直接获取默认第一条地址\n      return this.addressList[0];\n    },\n    longAddress() {\n      const region = this.selectAddress.region;\n      return region.province + region.city + region.region + this.selectAddress.detail;\n    },\n    mode() {\n      return this.$route.query.mode;\n    },\n    cartIds() {\n      return this.$route.query.cartIds;\n    },\n    goodsId() {\n      return this.$route.query.goodsId;\n    },\n    goodsSkuId() {\n      return this.$route.query.goodsSkuId;\n    },\n    goodsNum() {\n      return this.$route.query.goodsNum;\n    }\n  }\n};","map":{"version":3,"names":["getAddressList","checkOrder","submitOrder","name","data","addressList","order","personal","methods","list","getOrderList","mode","cartIds","goodsId","goodsSkuId","goodsNum","remark","$toast","success","$router","replace","created","computed","selectAddress","longAddress","region","province","city","detail","$route","query"],"sources":["src/views/pay/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"pay\">\r\n    <van-nav-bar fixed title=\"订单结算台\" left-arrow @click-left=\"$router.go(-1)\" />\r\n\r\n    <!-- 地址相关 -->\r\n    <div class=\"address\">\r\n\r\n      <div class=\"left-icon\">\r\n        <van-icon name=\"logistics\" />\r\n      </div>\r\n\r\n      <div  class=\"info\" v-if=\"selectAddress?.address_id\">\r\n        <div class=\"info-content\">\r\n          <span class=\"name\">{{ selectAddress.name }}</span>-\r\n          <span class=\"mobile\">{{ selectAddress.phone }}</span>\r\n        </div>\r\n        <div class=\"info-address\">\r\n          {{ longAddress}}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"info\" v-else>\r\n        请选择配送地址\r\n      </div>\r\n\r\n      <div class=\"right-icon\">\r\n        <van-icon name=\"arrow\" />\r\n      </div>\r\n    </div>\r\n\r\n  <!-- 订单明细 -->\r\n<div class=\"pay-list\" v-if=\"order.goodsList\">\r\n  <div class=\"list\">\r\n    <div class=\"goods-item\" v-for=\"item in order.goodsList\" :key=\"item.goods_id\">\r\n        <div class=\"left\">\r\n          <img :src=\"item.goods_image\" alt=\"\" />\r\n        </div>\r\n        <div class=\"right\">\r\n          <p class=\"tit text-ellipsis-2\">\r\n            {{ item.goods_name }}\r\n          </p>\r\n          <p class=\"info\">\r\n            <span class=\"count\">x{{ item.total_num }}</span>\r\n            <span class=\"price\">¥{{ item.total_pay_price }}</span>\r\n          </p>\r\n        </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"flow-num-box\">\r\n    <span>共 {{ order.orderTotalNum }} 件商品，合计：</span>\r\n    <span class=\"money\">￥{{ order.orderTotalPrice }}</span>\r\n  </div>\r\n\r\n  <div class=\"pay-detail\">\r\n    <div class=\"pay-cell\">\r\n      <span>订单总金额：</span>\r\n      <span class=\"red\">￥{{ order.orderTotalPrice }}</span>\r\n    </div>\r\n\r\n    <div class=\"pay-cell\">\r\n      <span>优惠券：</span>\r\n      <span>无优惠券可用</span>\r\n    </div>\r\n\r\n    <div class=\"pay-cell\">\r\n      <span>配送费用：</span>\r\n      <span v-if=\"!selectAddress\">请先选择配送地址</span>\r\n      <span v-else class=\"red\">+￥0.00</span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- 支付方式 -->\r\n  <div class=\"pay-way\">\r\n    <span class=\"tit\">支付方式</span>\r\n    <div class=\"pay-cell\">\r\n      <span><van-icon name=\"balance-o\" />余额支付（可用 ¥ {{ personal.balance }} 元）</span>\r\n      <!-- <span>请先选择配送地址</span> -->\r\n      <span class=\"red\"><van-icon name=\"passed\" /></span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- 买家留言 -->\r\n  <div class=\"buytips\">\r\n    <textarea placeholder=\"选填：买家留言（50字内）\" name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n  </div>\r\n</div>\r\n\r\n<!-- 底部提交 -->\r\n<div class=\"footer-fixed\">\r\n  <div class=\"left\">实付款：<span>￥{{ order.orderTotalPrice }}</span></div>\r\n  <div class=\"tipsbtn\"\r\n  @click=\"submitOrder\"\r\n  >提交订单</div>\r\n</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAddressList } from '@/api/address'\r\nimport { checkOrder, submitOrder } from '@/api/order'\r\nexport default {\r\n  name: 'PayIndex',\r\n  data () {\r\n    return {\r\n      addressList: [],\r\n      order: {},\r\n      personal: {}\r\n    }\r\n  },\r\n  methods: {\r\n    async getAddressList () {\r\n      const { data: { list } } = await getAddressList()\r\n      this.addressList = list\r\n    },\r\n    // 获取结算商品\r\n    async getOrderList () {\r\n      if (this.mode === 'cart') {\r\n        const { data: { order, personal } } = await checkOrder(this.mode, { cartIds: this.cartIds })\r\n        this.order = order\r\n        this.personal = personal\r\n      }\r\n      if (this.mode === 'buyNow') {\r\n        const { data: { order, personal } } = await checkOrder(this.mode, {\r\n          goodsId: this.goodsId,\r\n          goodsSkuId: this.goodsSkuId,\r\n          goodsNum: this.goodsNum\r\n        })\r\n        this.order = order\r\n        this.personal = personal\r\n      }\r\n    },\r\n    // 生成订单\r\n    async submitOrder () {\r\n      if (this.mode === 'cart') {\r\n        await submitOrder(this.mode, {\r\n          remark: this.remark,\r\n          cartIds: this.cartIds\r\n        })\r\n      }\r\n      if (this.mode === 'buyNow') {\r\n        await submitOrder(this.mode, {\r\n          remark: this.remark,\r\n          goodsId: this.goodsId,\r\n          goodsSkuId: this.goodsSkuId,\r\n          goodsNum: this.goodsNum\r\n        })\r\n      }\r\n      this.$toast.success('支付成功')\r\n      this.$router.replace('/myorder')\r\n    }\r\n  },\r\n  async created () {\r\n    this.getAddressList()\r\n    this.getOrderList()\r\n  },\r\n  computed: {\r\n    selectAddress () {\r\n    // 这里地址管理不是主线业务，直接获取默认第一条地址\r\n      return this.addressList[0]\r\n    },\r\n    longAddress () {\r\n      const region = this.selectAddress.region\r\n      return region.province + region.city + region.region + this.selectAddress.detail\r\n    },\r\n    mode () {\r\n      return this.$route.query.mode\r\n    },\r\n    cartIds () {\r\n      return this.$route.query.cartIds\r\n    },\r\n    goodsId () {\r\n      return this.$route.query.goodsId\r\n    },\r\n    goodsSkuId () {\r\n      return this.$route.query.goodsSkuId\r\n    },\r\n    goodsNum () {\r\n      return this.$route.query.goodsNum\r\n    }\r\n\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.pay {\r\n  padding-top: 46px;\r\n  padding-bottom: 46px;\r\n  ::v-deep {\r\n    .van-nav-bar__arrow {\r\n      color: #333;\r\n    }\r\n  }\r\n}\r\n.address {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding: 20px;\r\n  font-size: 14px;\r\n  color: #666;\r\n  position: relative;\r\n  background: url(@/assets/border-line.png) bottom repeat-x;\r\n  background-size: 60px auto;\r\n  .left-icon {\r\n    margin-right: 20px;\r\n  }\r\n  .right-icon {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-7px);\r\n  }\r\n}\r\n.goods-item {\r\n  height: 100px;\r\n  margin-bottom: 6px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  display: flex;\r\n  .left {\r\n    width: 100px;\r\n    img {\r\n      display: block;\r\n      width: 80px;\r\n      margin: 10px auto;\r\n    }\r\n  }\r\n  .right {\r\n    flex: 1;\r\n    font-size: 14px;\r\n    line-height: 1.3;\r\n    padding: 10px;\r\n    padding-right: 0px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    color: #333;\r\n    .info {\r\n      margin-top: 5px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      .price {\r\n        color: #fa2209;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.flow-num-box {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding: 10px 10px;\r\n  font-size: 14px;\r\n  border-bottom: 1px solid #efefef;\r\n  .money {\r\n    color: #fa2209;\r\n  }\r\n}\r\n\r\n.pay-cell {\r\n  font-size: 14px;\r\n  padding: 10px 12px;\r\n  color: #333;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .red {\r\n    color: #fa2209;\r\n  }\r\n}\r\n.pay-detail {\r\n  border-bottom: 1px solid #efefef;\r\n}\r\n\r\n.pay-way {\r\n  font-size: 14px;\r\n  padding: 10px 12px;\r\n  border-bottom: 1px solid #efefef;\r\n  color: #333;\r\n  .tit {\r\n    line-height: 30px;\r\n  }\r\n  .pay-cell {\r\n    padding: 10px 0;\r\n  }\r\n  .van-icon {\r\n    font-size: 20px;\r\n    margin-right: 5px;\r\n  }\r\n}\r\n\r\n.buytips {\r\n  display: block;\r\n  textarea {\r\n    display: block;\r\n    width: 100%;\r\n    border: none;\r\n    font-size: 14px;\r\n    padding: 12px;\r\n    height: 100px;\r\n  }\r\n}\r\n\r\n.footer-fixed {\r\n  position: fixed;\r\n  background-color: #fff;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 46px;\r\n  line-height: 46px;\r\n  border-top: 1px solid #efefef;\r\n  font-size: 14px;\r\n  display: flex;\r\n  .left {\r\n    flex: 1;\r\n    padding-left: 12px;\r\n    color: #666;\r\n    span {\r\n      color:#fa2209;\r\n    }\r\n  }\r\n  .tipsbtn {\r\n    width: 121px;\r\n    background: linear-gradient(90deg,#f9211c,#ff6335);\r\n    color: #fff;\r\n    text-align: center;\r\n    line-height: 46px;\r\n    display: block;\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAmGA,SAAAA,cAAA;AACA,SAAAC,UAAA,EAAAC,WAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,KAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAR,eAAA;MACA;QAAAI,IAAA;UAAAK;QAAA;MAAA,UAAAT,cAAA;MACA,KAAAK,WAAA,GAAAI,IAAA;IACA;IACA;IACA,MAAAC,aAAA;MACA,SAAAC,IAAA;QACA;UAAAP,IAAA;YAAAE,KAAA;YAAAC;UAAA;QAAA,UAAAN,UAAA,MAAAU,IAAA;UAAAC,OAAA,OAAAA;QAAA;QACA,KAAAN,KAAA,GAAAA,KAAA;QACA,KAAAC,QAAA,GAAAA,QAAA;MACA;MACA,SAAAI,IAAA;QACA;UAAAP,IAAA;YAAAE,KAAA;YAAAC;UAAA;QAAA,UAAAN,UAAA,MAAAU,IAAA;UACAE,OAAA,OAAAA,OAAA;UACAC,UAAA,OAAAA,UAAA;UACAC,QAAA,OAAAA;QACA;QACA,KAAAT,KAAA,GAAAA,KAAA;QACA,KAAAC,QAAA,GAAAA,QAAA;MACA;IACA;IACA;IACA,MAAAL,YAAA;MACA,SAAAS,IAAA;QACA,MAAAT,WAAA,MAAAS,IAAA;UACAK,MAAA,OAAAA,MAAA;UACAJ,OAAA,OAAAA;QACA;MACA;MACA,SAAAD,IAAA;QACA,MAAAT,WAAA,MAAAS,IAAA;UACAK,MAAA,OAAAA,MAAA;UACAH,OAAA,OAAAA,OAAA;UACAC,UAAA,OAAAA,UAAA;UACAC,QAAA,OAAAA;QACA;MACA;MACA,KAAAE,MAAA,CAAAC,OAAA;MACA,KAAAC,OAAA,CAAAC,OAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,KAAArB,cAAA;IACA,KAAAU,YAAA;EACA;EACAY,QAAA;IACAC,cAAA;MACA;MACA,YAAAlB,WAAA;IACA;IACAmB,YAAA;MACA,MAAAC,MAAA,QAAAF,aAAA,CAAAE,MAAA;MACA,OAAAA,MAAA,CAAAC,QAAA,GAAAD,MAAA,CAAAE,IAAA,GAAAF,MAAA,CAAAA,MAAA,QAAAF,aAAA,CAAAK,MAAA;IACA;IACAjB,KAAA;MACA,YAAAkB,MAAA,CAAAC,KAAA,CAAAnB,IAAA;IACA;IACAC,QAAA;MACA,YAAAiB,MAAA,CAAAC,KAAA,CAAAlB,OAAA;IACA;IACAC,QAAA;MACA,YAAAgB,MAAA,CAAAC,KAAA,CAAAjB,OAAA;IACA;IACAC,WAAA;MACA,YAAAe,MAAA,CAAAC,KAAA,CAAAhB,UAAA;IACA;IACAC,SAAA;MACA,YAAAc,MAAA,CAAAC,KAAA,CAAAf,QAAA;IACA;EAEA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}