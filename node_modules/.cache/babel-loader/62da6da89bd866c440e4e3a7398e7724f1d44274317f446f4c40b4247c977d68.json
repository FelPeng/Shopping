{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport axios from 'axios';\nimport store from '@/store';\n// 创建axios实例，将来对创建出来的实例，进行自定义配置\nconst instance = axios.create({\n  baseURL: 'http://cba.itlike.com/public/index.php?s=/api/',\n  timeout: 5000\n});\n\n//   请求，响应拦截器\n// 添加请求拦截器\ninstance.interceptors.request.use(function (config) {\n  config.headers['content-Security-Policy'] = 'upgrade-insecure-requests';\n  // 在发送请求之前做些什么\n  // 开启loading，禁止背景点击（节流处理）\n  _Toast.loading({\n    message: '加载中...',\n    forbidClick: true,\n    // 是否禁用背景点击\n    loadingType: 'spinner',\n    // 图标样式\n    duration: 0 // 展示时长(ms)，值为 0 时，toast 不会消失\n  });\n  // 添加请求头配置\n  const token = store.getters.token;\n  if (token) {\n    config.headers['Access-Token'] = token;\n    config.headers.platform = 'H5';\n  }\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\ninstance.interceptors.response.use(function (response) {\n  // 2xx 范围内的状态码都会触发该函数。\n  // 对响应数据做点什么(默认axios会包装一层data，需要响应拦截器中处理一下)\n  const res = response.data;\n  if (res.status !== 200) {\n    // 给个提示\n    // toast默认是单例模式，后面的toast调用会覆盖前一个toast效果\n    _Toast(`${res.message}`);\n    // 抛出一个错误\n    return res.reject(res.message);\n  } else {\n    // 正确情况，直接走业务核心逻辑，关闭loading效果\n    _Toast.clear();\n  }\n  return res;\n}, function (error) {\n  // 超出 2xx 范围的状态码都会触发该函数。\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\n\n// 导出配置好的实例\nexport default instance;","map":{"version":3,"names":["axios","store","instance","create","baseURL","timeout","interceptors","request","use","config","headers","_Toast","loading","message","forbidClick","loadingType","duration","token","getters","platform","error","Promise","reject","response","res","data","status","clear"],"sources":["D:/WebData/VUE/VUE/VUE2/shopping-mode/shopping/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { Toast } from 'vant'\r\nimport store from '@/store'\r\n// 创建axios实例，将来对创建出来的实例，进行自定义配置\r\nconst instance = axios.create({\r\n  baseURL: 'http://cba.itlike.com/public/index.php?s=/api/',\r\n  timeout: 5000\r\n})\r\n\r\n//   请求，响应拦截器\r\n// 添加请求拦截器\r\ninstance.interceptors.request.use(function (config) {\r\n  config.headers['content-Security-Policy']='upgrade-insecure-requests'\r\n    // 在发送请求之前做些什么\r\n    // 开启loading，禁止背景点击（节流处理）\r\n  Toast.loading({\r\n    message: '加载中...',\r\n    forbidClick: true, // 是否禁用背景点击\r\n    loadingType: 'spinner', // 图标样式\r\n    duration: 0 // 展示时长(ms)，值为 0 时，toast 不会消失\r\n  })\r\n  // 添加请求头配置\r\n  const token = store.getters.token\r\n  if (token) {\r\n    config.headers['Access-Token'] = token\r\n    config.headers.platform = 'H5'\r\n  }\r\n  return config\r\n}, function (error) {\r\n  // 对请求错误做些什么\r\n  return Promise.reject(error)\r\n})\r\n\r\n// 添加响应拦截器\r\ninstance.interceptors.response.use(function (response) {\r\n  // 2xx 范围内的状态码都会触发该函数。\r\n  // 对响应数据做点什么(默认axios会包装一层data，需要响应拦截器中处理一下)\r\n  const res = response.data\r\n  if (res.status !== 200) {\r\n    // 给个提示\r\n    // toast默认是单例模式，后面的toast调用会覆盖前一个toast效果\r\n    Toast(`${res.message}`)\r\n    // 抛出一个错误\r\n    return res.reject(res.message)\r\n  } else {\r\n    // 正确情况，直接走业务核心逻辑，关闭loading效果\r\n    Toast.clear()\r\n  }\r\n  return res\r\n}, function (error) {\r\n  // 超出 2xx 范围的状态码都会触发该函数。\r\n  // 对响应错误做点什么\r\n  return Promise.reject(error)\r\n})\r\n\r\n// 导出配置好的实例\r\nexport default instance\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,SAAS;AAC3B;AACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC5BC,OAAO,EAAE,gDAAgD;EACzDC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA;AACAH,QAAQ,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;EAClDA,MAAM,CAACC,OAAO,CAAC,yBAAyB,CAAC,GAAC,2BAA2B;EACnE;EACA;EACFC,MAAA,CAAMC,OAAO,CAAC;IACZC,OAAO,EAAE,QAAQ;IACjBC,WAAW,EAAE,IAAI;IAAE;IACnBC,WAAW,EAAE,SAAS;IAAE;IACxBC,QAAQ,EAAE,CAAC,CAAC;EACd,CAAC,CAAC;EACF;EACA,MAAMC,KAAK,GAAGhB,KAAK,CAACiB,OAAO,CAACD,KAAK;EACjC,IAAIA,KAAK,EAAE;IACTR,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,GAAGO,KAAK;IACtCR,MAAM,CAACC,OAAO,CAACS,QAAQ,GAAG,IAAI;EAChC;EACA,OAAOV,MAAM;AACf,CAAC,EAAE,UAAUW,KAAK,EAAE;EAClB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACAlB,QAAQ,CAACI,YAAY,CAACiB,QAAQ,CAACf,GAAG,CAAC,UAAUe,QAAQ,EAAE;EACrD;EACA;EACA,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;IACtB;IACA;IACAf,MAAA,CAAO,GAAEa,GAAG,CAACX,OAAQ,EAAC,CAAC;IACvB;IACA,OAAOW,GAAG,CAACF,MAAM,CAACE,GAAG,CAACX,OAAO,CAAC;EAChC,CAAC,MAAM;IACL;IACAF,MAAA,CAAMgB,KAAK,CAAC,CAAC;EACf;EACA,OAAOH,GAAG;AACZ,CAAC,EAAE,UAAUJ,KAAK,EAAE;EAClB;EACA;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACA,eAAelB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}