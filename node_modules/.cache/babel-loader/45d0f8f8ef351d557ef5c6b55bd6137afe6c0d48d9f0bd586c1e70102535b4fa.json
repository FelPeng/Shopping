{"ast":null,"code":"import { getPicCode } from '@/api/login';\n// Toast轻提示\n// import { Toast } from 'vant'\nexport default {\n  name: 'LoginIndex',\n  data() {\n    return {\n      picCode: '',\n      // 用户输入的图像验证码\n      mobile: '',\n      // 用户输入的手机号\n      picKye: '',\n      // 将来请求传递的图形验证码唯一标识\n      picUrl: '',\n      // 存储请求渲染的图片地址\n      totalSecond: 60,\n      // 总秒数\n      Second: 60,\n      // 当前秒数\n      timer: null // 定时器id\n    };\n  },\n\n  async created() {\n    this.getpicCode();\n  },\n  destoryed() {\n    clearInterval(this.timer);\n  },\n  methods: {\n    // 获取图形验证码\n    async getpicCode() {\n      const {\n        data: {\n          base64,\n          key\n        }\n      } = await getPicCode();\n      // data.base64 做渲染\n      // data.key 做验证\n      // console.log(res)\n      this.picUrl = base64;\n      this.picKye = key;\n      // console.log('获取图片')\n      // toast 轻提示:提示获取图片成功\n      // 1.导入调用\n      // Toast('获取成功')\n      // 2.this调用(只能组件内)\n      this.$toast('图片加载成功');\n    },\n    // 验证手机号与图片验证码的合法性\n    validFn() {\n      if (!/^1[3-9]\\d{9}&/.test(this.mobile)) {\n        this.toast('请输入合法的手机号');\n        return false;\n      }\n      if (!/^\\w{4}$/.test(this.picCode)) {\n        this.toast('请输入合法的验证码');\n        return false;\n      }\n      return true;\n    },\n    // 获取短信验证码\n    getCode() {\n      // 开启定时器\n      if (!this.timer && this.Second === this.totalSecond) {\n        this.timer = setInterval(() => {\n          this.Second--;\n          // 关闭定时器\n          if (this.Second <= 1) {\n            clearInterval(this.timer);\n            this.Second = this.totalSecond;\n          }\n        }, 1000);\n        this.toast('发送成功,请注意查收');\n      }\n    }\n  }\n};","map":{"version":3,"names":["getPicCode","name","data","picCode","mobile","picKye","picUrl","totalSecond","Second","timer","created","getpicCode","destoryed","clearInterval","methods","base64","key","$toast","validFn","test","toast","getCode","setInterval"],"sources":["src/views/login/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <van-nav-bar title=\"会员登录\" left-arrow @click-left=\"$router.go(-1)\" />\r\n    <div class=\"container\">\r\n      <div class=\"title\">\r\n        <h3>手机号登录</h3>\r\n        <p>未注册的手机号登录后将自动注册</p>\r\n      </div>\r\n\r\n      <div class=\"form\">\r\n        <div class=\"form-item\">\r\n          <input\r\n          v-model=\"mobile\"\r\n          class=\"inp\" maxlength=\"11\" placeholder=\"请输入手机号码\" type=\"text\">\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <input\r\n          v-model=\"picCode\"\r\n          class=\"inp\" maxlength=\"5\" placeholder=\"请输入图形验证码\" type=\"text\">\r\n          <!--  图片验证码 -->\r\n          <img v-if=\"picUrl\"\r\n          :src=\"picUrl\"\r\n          alt=\"\"\r\n          @click=\"getpicCode\"\r\n          >\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <input class=\"inp\" placeholder=\"请输入短信验证码:246810\" type=\"text\">\r\n          <button\r\n          @click=\"getCode\"\r\n          >{{Second === totalSecond ? '获取验证码' : Second + '秒后重新获取'}}</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"login-btn\">登录</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getPicCode } from '@/api/login'\r\n// Toast轻提示\r\n// import { Toast } from 'vant'\r\nexport default {\r\n  name: 'LoginIndex',\r\n  data () {\r\n    return {\r\n      picCode: '', // 用户输入的图像验证码\r\n      mobile: '', // 用户输入的手机号\r\n      picKye: '', // 将来请求传递的图形验证码唯一标识\r\n      picUrl: '', // 存储请求渲染的图片地址\r\n      totalSecond: 60, // 总秒数\r\n      Second: 60, // 当前秒数\r\n      timer: null // 定时器id\r\n    }\r\n  },\r\n  async created () {\r\n    this.getpicCode()\r\n  },\r\n  destoryed () {\r\n    clearInterval(this.timer)\r\n  },\r\n  methods: {\r\n    // 获取图形验证码\r\n    async getpicCode () {\r\n      const { data: { base64, key } } = await getPicCode()\r\n      // data.base64 做渲染\r\n      // data.key 做验证\r\n      // console.log(res)\r\n      this.picUrl = base64\r\n      this.picKye = key\r\n      // console.log('获取图片')\r\n      // toast 轻提示:提示获取图片成功\r\n      // 1.导入调用\r\n      // Toast('获取成功')\r\n      // 2.this调用(只能组件内)\r\n      this.$toast('图片加载成功')\r\n    },\r\n    // 验证手机号与图片验证码的合法性\r\n    validFn () {\r\n      if (!/^1[3-9]\\d{9}&/.test(this.mobile)) {\r\n        this.toast('请输入合法的手机号')\r\n        return false\r\n      }\r\n      if (!/^\\w{4}$/.test(this.picCode)) {\r\n        this.toast('请输入合法的验证码')\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n    // 获取短信验证码\r\n    getCode () {\r\n      // 开启定时器\r\n      if (!this.timer && this.Second === this.totalSecond) {\r\n        this.timer = setInterval(() => {\r\n          this.Second--\r\n          // 关闭定时器\r\n          if (this.Second <= 1) {\r\n            clearInterval(this.timer)\r\n            this.Second = this.totalSecond\r\n          }\r\n        }, 1000)\r\n        this.toast('发送成功,请注意查收')\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.container {\r\n  padding: 49px 29px;\r\n\r\n  .title {\r\n    margin-bottom: 20px;\r\n    h3 {\r\n      font-size: 26px;\r\n      font-weight: normal;\r\n    }\r\n    p {\r\n      line-height: 40px;\r\n      font-size: 14px;\r\n      color: #b8b8b8;\r\n    }\r\n  }\r\n\r\n  .form-item {\r\n    border-bottom: 1px solid #f3f1f2;\r\n    padding: 8px;\r\n    margin-bottom: 14px;\r\n    display: flex;\r\n    align-items: center;\r\n    .inp {\r\n      display: block;\r\n      border: none;\r\n      outline: none;\r\n      height: 32px;\r\n      font-size: 14px;\r\n      flex: 1;\r\n    }\r\n    img {\r\n      width: 94px;\r\n      height: 31px;\r\n    }\r\n    button {\r\n      height: 31px;\r\n      border: none;\r\n      font-size: 13px;\r\n      color: #cea26a;\r\n      background-color: transparent;\r\n      padding-right: 9px;\r\n    }\r\n  }\r\n\r\n  .login-btn {\r\n    width: 100%;\r\n    height: 42px;\r\n    margin-top: 39px;\r\n    background: linear-gradient(90deg,#ecb53c,#ff9211);\r\n    color: #fff;\r\n    border-radius: 39px;\r\n    box-shadow: 0 10px 20px 0 rgba(0,0,0,.1);\r\n    letter-spacing: 2px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAwCA,SAAAA,UAAA;AACA;AACA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MAAA;MACAC,MAAA;MAAA;MACAC,MAAA;MAAA;MACAC,MAAA;MAAA;MACAC,WAAA;MAAA;MACAC,MAAA;MAAA;MACAC,KAAA;IACA;EACA;;EACA,MAAAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,UAAA;IACAC,aAAA,MAAAJ,KAAA;EACA;EACAK,OAAA;IACA;IACA,MAAAH,WAAA;MACA;QAAAT,IAAA;UAAAa,MAAA;UAAAC;QAAA;MAAA,UAAAhB,UAAA;MACA;MACA;MACA;MACA,KAAAM,MAAA,GAAAS,MAAA;MACA,KAAAV,MAAA,GAAAW,GAAA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAC,MAAA;IACA;IACA;IACAC,QAAA;MACA,qBAAAC,IAAA,MAAAf,MAAA;QACA,KAAAgB,KAAA;QACA;MACA;MACA,eAAAD,IAAA,MAAAhB,OAAA;QACA,KAAAiB,KAAA;QACA;MACA;MACA;IACA;IACA;IACAC,QAAA;MACA;MACA,UAAAZ,KAAA,SAAAD,MAAA,UAAAD,WAAA;QACA,KAAAE,KAAA,GAAAa,WAAA;UACA,KAAAd,MAAA;UACA;UACA,SAAAA,MAAA;YACAK,aAAA,MAAAJ,KAAA;YACA,KAAAD,MAAA,QAAAD,WAAA;UACA;QACA;QACA,KAAAa,KAAA;MACA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}